// // Licensed under the MIT license. See LICENSE file in the project root for full license information.

*/

/*====================================================    | GENERAL NOTES |    ======================================================*/

//--- C# Basics - Strings General line coding

// Hello World, Introducing Strings! [Pt 4] | C# for Beginners
// The Basics of Strings! [Pt 5] | C# for Beginners
// Searching Strings [Pt 6] | C# for Beginners

var sayHello = "Hello, World!";
Console.WriteLine(sayHello);

// 

string firstFriend = "David";
string secondFriend = "Scott";

// For string concatenation
Console.WriteLine("My friends are " + firstFriend + " and " + secondFriend);

// $ string interpolation (Modern new way)
Console.WriteLine($"My friends are {firstFriend} and {secondFriend}");

---
string greeting = "     Hello World!    ";
Console.WriteLine($"[{greeting}]");

string trimmedGreeting = greeting.TrimStart();
Console.WriteLine($"[{trimmedGreeting}]");

trimmedGreeting = greeting.TrimEnd();
Console.WriteLine($"[{trimmedGreeting}]");

trimmedGreeting = greeting.Trim();
Console.WriteLine($"[{trimmedGreeting}]");

/* Returns
[     Hello World!    ]
[Hello World!    ]
[     Hello World!]
[Hello World!]*/

---
string firstFriend = "      David       ";
string secondFriend = "     Scott       ";

firstFriend = firstFriend.TrimStart().TrimEnd();    // 'chaining' of Methods
Console.WriteLine($"My friends are {firstFriend} and {secondFriend.Trim()}");  // $ string interpolation

// Quick keys: To highlight all text in a single line. Press SHIFT + down arrow

// Replace
var sayHello = "Hello, World!";
Console.WriteLine(sayHello);

// 

sayHello = sayHello.Replace("Hello", "Greetings");
Console.WriteLine(sayHello);

/*Hello, World!
Greetings, World!*/

---
string firstFriend = "David";
string secondFriend = "Scott";

string friends = $"My friends are {firstFriend} and {secondFriend}";

Console.WriteLine(friends.Replace("David", "Frank"));   // Replace old string David with new string Frank
Console.WriteLine(friends);

/*Hello, World!
My friends are Frank and Scott
My friends are David and Scott*/

// ** Strings in .NET are 'immutable' which means you can't change the contents of the original string
// Replace only returns the change on a single line Console.WriteLine();

// To make the change a permanent change (assigned explicitly)
friends = friends.Replace("David", "Frank");
Console.WriteLine(friends);

/* Returns
 * My friends are Frank and Scott*/

---
string firstFriend = "David";
string secondFriend = "Scott";

string friends = $"My friends are {firstFriend} and {secondFriend}";

Console.WriteLine(friends.Contains("David"));
// Returns True

Console.WriteLine(friends.ToUpper());
Console.WriteLine(friends);

/*MY FRIENDS ARE DAVID AND SCOTT
My friends are David and Scott*/
// Immutable not permanently changed or mutated (changes are only returned on one single line)

Console.WriteLine(friends.Length);
// Returns 30

Console.WriteLine(friends.StartsWith("Sco"));
// Returns False		Because the string begins with My

Console.WriteLine(friends.StartsWith("My "));
// Returns True			Significant 'Whitespace' meaning anything in Quotations ""

Console.WriteLine(friends.StartsWith("My  "));
// Returns False		Also, note that SPACES matter. If you have a double space it returns False

/*====================================================    | GENERAL NOTES |    ======================================================*/

//
